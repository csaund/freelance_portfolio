high=~High,
low=~Low,
close=~Settle) %>%
layout(annotations = a)
layout(figf) %>%
config(edits = list(shapePosition = TRUE))
layout(figf) %>%
config(edits = list(shapePosition = TRUE)) %>%
add_annotations(
x = lines_data$x0,
y = lines_data$y0,
text = "testing",
xref = "x",
yref = "y",
showarrow = FALSE,
ax = 20,
ay = -40,
# Styling annotations' text:
font = list(color = '#264E86',
family = 'sans serif',
size = 14)
)
fig <- w.ws[j:k] %>%
plot_ly(x=~Date,
type='candlestick',
open=~Open,
high=~High,
low=~Low,
close=~Settle) %>%
layout(shapes = list(vline(), hline()))
layout(figf) %>%
config(edits = list(shapePosition = TRUE)) %>%
add_annotations(
x = lines_data$x0,
y = lines_data$y0,
text = "testing",
xref = "x",
yref = "y",
showarrow = FALSE,
ax = 20,
ay = -40,
# Styling annotations' text:
font = list(color = '#264E86',
family = 'sans serif',
size = 14)
)
fig <- w.ws[j:k] %>%
plot_ly(x=~Date,
type='candlestick',
open=~Open,
high=~High,
low=~Low,
close=~Settle) %>%
add_lines(x = c(4, 4), y = c(0, 10)) %>%
add_lines(x = c(3, 5), y = c(5, 5))
figf <- subplot(fig,figs,figp,figs10,figp10,
nrows=5,
shareX=TRUE) %>%
layout(xaxis=list(rangeslider=list(visible=F)))
layout(figf) %>%
config(edits = list(shapePosition = TRUE)) %>%
add_annotations(
x = lines_data$x0,
y = lines_data$y0,
text = "testing",
xref = "x",
yref = "y",
showarrow = FALSE,
ax = 20,
ay = -40,
# Styling annotations' text:
font = list(color = '#264E86',
family = 'sans serif',
size = 14)
)
fig <- w.ws[j:k] %>%
plot_ly(x=~Date,
type='candlestick',
open=~Open,
high=~High,
low=~Low,
close=~Settle) %>%
add_lines(x = c(4, 4), y = c(0, 10)) %>%
add_lines(x = c(3, 5), y = c(5, 5))
fig
fig <- w.ws[j:k] %>%
plot_ly(x=~Date,
type='candlestick',
open=~Open,
high=~High,
low=~Low,
close=~Settle)
fig
fig <- w.ws[j:k] %>%
plot_ly(x=~Date,
type='candlestick',
open=~Open,
high=~High,
low=~Low,
close=~Settle) %>%
add_segments(x = 4, xend = 4, y = 0, yend = 10) %>%
add_segments(x = 3, xend = 5, y = 5, yend = 5)
fig
fig <- w.ws[j:k] %>%
plot_ly(x=~Date,
type='candlestick',
open=~Open,
high=~High,
low=~Low,
close=~Settle) %>%
add_segments(x = lines_data$x0, xend = lines_data$x1,
y = lines_data$y0, yend = lines_data$y1)
fig
fig <- w.ws[j:k] %>%
plot_ly(x=~Date,
type='candlestick',
open=~Open,
high=~High,
low=~Low,
close=~Settle) %>%
add_segments(x = lines_data$x0[[1]], xend = lines_data$x1[[1]],
y = lines_data$y0[[1]], yend = lines_data$y1[[1]])
fig
fig <- w.ws[j:k] %>%
plot_ly(x=~Date,
type='candlestick',
open=~Open,
high=~High,
low=~Low,
close=~Settle)
fig
lines_data$x0
lines_data$x0[[1]]
lines_data$x0[1]
fig <- w.ws[j:k] %>%
plot_ly(x=~Date,
type='candlestick',
open=~Open,
high=~High,
low=~Low,
close=~Settle) %>%
add_segments(x = "2016-04-24", xend = "2018-04-24",
y = 0, yend = 5)
fig
fig <- w.ws[j:k] %>%
plot_ly(x=~Date,
type='candlestick',
open=~Open,
high=~High,
low=~Low,
close=~Settle) %>%
add_segments(x = "2016-04-24", xend = "2018-04-24",
y = 0, yend = 5) %>%
add_segments(x = "2017-04-24", xend = "2018-04-24",
y = 6, yend = 5)
fig
layout(figf) %>%
config(edits = list(shapePosition = TRUE))
fig
?add_annotations
# initiate a line shape object
line <- list(
type = "line",
line = list(color = "pink"),
xref = "x",
yref = "y"
)
lines <- list()
for (i in c(0, 3, 5, 7, 9, 13)) {
line[["x0"]] <- i
line[["x1"]] <- i + 2
line[c("y0", "y1")] <- sin(i + 1)
lines <- c(lines, list(line))
}
fig <- layout(fig, title = 'Highlighting with Lines', shapes = lines)
fig
fig <- w.ws[j:k] %>%
plot_ly(x=~Date,
type='candlestick',
open=~Open,
high=~High,
low=~Low,
close=~Settle) %>%
add_segments(x = "2016-04-24", xend = "2018-04-24",
y = 0, yend = 5) %>%
add_segments(x = "2017-04-24", xend = "2018-04-24",
y = 6, yend = 5)
fig
fig <- layout(fig, title = 'Highlighting with Lines', shapes = lines)
fig
fig <- w.ws[j:k] %>%
plot_ly(x=~Date,
type='candlestick',
open=~Open,
high=~High,
low=~Low,
close=~Settle)
fig
lines_data[[1]]
x = lines_data[[1]]
x
lines_data[[1]][[1]]
lines_data[[1]][[1]][[1]]
lines_data[[1]][1]
lines_data[1][1]
lines_data[1][1][1]
lines_data$x0[1]
lines_data$x0[[1]]
lines <- list()
for (i in c(1, 2)) {
line[["x0"]] <- lines_data$x0[i]
line[["x1"]] <- lines_data$x1[i]
line[["y0"]] <- lines_data$y0[i]
line[["y1"]] <- lines_data$y1[i]
lines <- c(lines, list(line))
}
fig <- layout(fig, title = 'Highlighting with Lines', shapes = lines)
fig
fig <- w.ws[j:k] %>%
plot_ly(x=~Date,
type='candlestick',
open=~Open,
high=~High,
low=~Low,
close=~Settle)
layout(figf) %>%
config(edits = list(shapePosition = TRUE))
fig
fig <- layout(fig, title = 'Highlighting with Lines', shapes = lines)
fig
layout(figf) %>%
config(edits = list(shapePosition = TRUE))
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
l1 <- list(
type='line',
x0 = lines_data$x0[2],
x1 = lines_data$x1[2],
y0 = lines_data$y0[2],
y1 = lines_data$y1[2],
xref='x',yref='y',
line=list(color='red',width=0.5))
l2 <- list(
type='line',
x0 = lines_data$x0[1],
x1 = lines_data$x1[1],
y0 = lines_data$y0[1],
y1 = lines_data$y1[1],
xref='x',yref='y',
line=list(color='green',width=0.5))
lines=list(l1,l2)
fig <- layout(fig, title = 'Highlighting with Lines', shapes = lines)
fig
fig <- w.ws[j:k] %>%
plot_ly(x=~Date,
type='candlestick',
open=~Open,
high=~High,
low=~Low,
close=~Settle)
fig <- layout(fig, title = 'Highlighting with Lines', shapes = lines)
fig
lines
type(lines)
typeof(lines)
typeof(lines[[1]])
typeof(lines[[2]])
typeof(lines[[1]][["type"]])
lines[[1]][["type"]]
lines
a <- list(1, 'a')
a
append(a, 't')
a
runApp('testapp')
runApp('testapp')
len(lines)
length(lines)
runApp('testapp')
l3 <- list(
type='line',
x0 = lines_data$x0[1],
x1 = lines_data$x1[1],
y0 = lines_data$y0[0],
y1 = lines_data$y1[1],
xref='x',yref='y',
line=list(color='blue',width=0.5))
lines=list(l1,l2, l3)
fig <- layout(fig, title = 'Highlighting with Lines', shapes = lines)
fig
lines=list(l1,l2,l3)
fig <- layout(fig, title = 'Highlighting with Lines', shapes = lines)
fig
l3 <- list(
type='line',
x0 = lines_data$x0[1],
x1 = lines_data$x1[1],
y0 = lines_data$y0[0],
y1 = lines_data$y1[1],
xref='x',yref='y',
line=list(color='blue',width=1.5))
lines=list(l1,l2,l3)
fig <- layout(fig, title = 'Highlighting with Lines', shapes = lines)
fig
l1 <- list(
type='line',
x0 = lines_data$x0[2],
x1 = lines_data$x1[2],
y0 = lines_data$y0[2],
y1 = lines_data$y1[2],
xref='x',yref='y',
line=list(color='pink',width=0.5))
lines=list(l1,l2,l3)
fig <- layout(fig, title = 'Highlighting with Lines', shapes = lines)
fig
lines
fig <- layout(fig, title = 'changing?? with Lines', shapes = lines)
fig
l1 <- list(
type='line',
x0 = lines_data$x0[2],
x1 = lines_data$x1[2],
y0 = lines_data$y0[2],
y1 = lines_data$y1[2],
xref='x',yref='y',
line=list(color='blue',width=0.5))
lines=list(l1,l2)
fig <- layout(fig, title = 'changing?? with Lines', shapes=lines)
fig
fig <- w.ws[j:k] %>%
plot_ly(x=~Date,
type='candlestick',
open=~Open,
high=~High,
low=~Low,
close=~Settle)
fig
fig <- layout(fig, title = 'changing?? with Lines', shapes=lines)
fig
l1 <- list(
type='line',
x0 = lines_data$x0[2],
x1 = lines_data$x1[2],
y0 = lines_data$y0[2],
y1 = lines_data$y1[2],
xref='x',yref='y',
line=list(color='red',width=0.5))
lines=list(l1,l2,l3)
fig <- layout(fig, title = 'changing?? with Lines', shapes=lines)
fig
fig <- w.ws[j:k] %>%
plot_ly(x=~Date,
type='candlestick',
open=~Open,
high=~High,
low=~Low,
close=~Settle)
fig <- layout(fig, title = 'changing?? with Lines', shapes=lines)
fig
lines=list(l1,l3)
fig <- layout(fig, title = 'changing?? with Lines', shapes=lines)
fig
fig <- w.ws[j:k] %>%
plot_ly(x=~Date,
type='candlestick',
open=~Open,
high=~High,
low=~Low,
close=~Settle)
t <- layout(fig, title = 'changing?? with Lines', shapes=lines)
t
l3 <- list(
type='line',
x0 = lines_data$x0[1],
x1 = lines_data$x1[1],
y0 = lines_data$y0[2],
y1 = lines_data$y1[1],
xref='x',yref='y',
line=list(color='blue',width=0.5))
lines=list(l1,l3)
t <- layout(fig, title = 'changing?? with Lines', shapes=lines)
t
lines=list(l1,l2,l3)
t <- layout(fig, title = 'changing?? with Lines', shapes=lines)
t
type(lines)
typeof(lines)
typeof(lines[1])
typeof(lines[2])
lines=list(l1,l2)
t <- layout(fig, title = 'changing?? with Lines', shapes=lines)
t
lines = append(lines, l3)
t <- layout(fig, title = 'changing?? with Lines', shapes=lines)
t
lines
typeof(lines[3])
typeof(lines[2])
length(lines)
lines=list(l1,l2)
length(lines)
i <- length(lines)+1
lines[[i]] <- list(
type='line',
x0 = lines_data$x0[1],
x1 = lines_data$x1[1],
y0 = lines_data$y0[2],
y1 = lines_data$y1[1],
xref='x',yref='y',
line=list(color='blue',width=0.5))
length(lines)
t <- layout(fig, title = 'changing?? with Lines', shapes=lines)
t
runApp('testapp')
lines=list(l1,l2)
t <- layout(fig, title = 'changing?? with Lines', shapes=lines)
t
i
lines[[i]] <- list(
type='line',
x0 = lines_data$x0[1],
x1 = lines_data$x1[1],
y0 = lines_data$y0[2],
y1 = lines_data$y1[1],
xref='x',yref='y',
line=list(color='blue',width=0.5))
t <- layout(fig, title = 'changing?? with Lines', shapes=lines)
t
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
install.packages("DT")
runApp('testapp')
runApp('testapp')
runApp('testapp')
line_data_table=data.frame(
start=c('1','1'),
end=c('2','2'),
percent_diff=c('4','4'))
line_data_table
ne = data.frame('test', 'end', 89)
names(ne)<-c('start', 'end', 'percent_diff')
tnew <- rbind(line_data_table, ne)
tnew
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
a = "test"
t+"a"
a+"a"
runApp('testapp')
runApp('testapp')
runApp('testapp')
type(a)
typeof(a)
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('testapp')
runApp('plotly_drawing')
runApp('plotly_drawing')
runApp('plotly_drawing')
