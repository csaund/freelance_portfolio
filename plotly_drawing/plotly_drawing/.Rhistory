#stats
first_game_avg <- first_games$total
repeat_game_avg <- repeats$total
# first game stats:
mean(first_game_avg)
sd(first_game_avg)
# repeat game stats:
mean(repeat_game_avg)
sd(repeat_game_avg)
overall_summary <- raw %>%
na.omit() %>%
group_by(League) %>%
summarise(mean_rules=mean(Rules),
sd_rules=sd(Rules),
n_Gr=n(),
SE_rules=sd(Rules)/sqrt(n()),
mean_att=mean(Attitude),
sd_att=sd(Attitude),
SE_att=sd(Attitude)/sqrt(n()),
mean_fouls=mean(Fouls),
sd_fouls=sd(Fouls),
SE_fouls=sd(Fouls)/sqrt(n()),
mean_fair=mean(Fairness),
sd_fair=sd(Fairness),
SE_fair=sd(Fairness)/sqrt(n()),
mean_comm=mean(Comms),
sd_comm=sd(Comms),
SE_comm=sd(Comms)/sqrt(n()))
plotable <- overall_summary %>%
gather("category", "mean_vals", c(2,6,9,12,15))
p <- ggplot(plotable, aes(x=category, mean_vals, fill=League)) +
geom_col(position=position_dodge())
p
# for this use case, I only used teams 3 and 4 in my definition of "development" as many unis are big enough
# to easily field 2 "first" indoor teams.
dev_teams <- raw %>%
filter(grepl(4,Opponent) | grepl(3,Opponent))
experienced_teams <- raw %>%
filter(grepl(1,Opponent))
compare_two_spirit_groups <- function(group1, group2, domain) {
g1_domain <- group1[[domain]]
g2_domain <- group2[[domain]]
print(mean(g1_domain))
print(mean(g2_domain))
t.test(g1_domain, g2_domain)
}
compare_two_spirit_groups(dev_teams, experienced_teams, "Rules")
compare_two_spirit_groups(dev_teams, experienced_teams, "Fouls")
compare_two_spirit_groups(dev_teams, experienced_teams, "Fairness")
compare_two_spirit_groups(dev_teams, experienced_teams, "Attitude")
compare_two_spirit_groups(dev_teams, experienced_teams, "Comms")
p_rules <- compare_two_spirit_groups(men, women, "Rules")[[3]]
p_fouls <- compare_two_spirit_groups(men, women, "Fouls")[[3]]
p_fairness <- compare_two_spirit_groups(men, women, "Fairness")[[3]]
p_attitude <- compare_two_spirit_groups(men, women, "Attitude")[[3]]
p_communcation <- compare_two_spirit_groups(men, women, "Comms")[[3]]
compare_two_spirit_groups(men, mixed, "Rules")
compare_two_spirit_groups(men, mixed, "Fouls")
compare_two_spirit_groups(men, mixed, "Fairness")
compare_two_spirit_groups(men, mixed, "Attitude")
compare_two_spirit_groups(men, mixed, "Comms")
compare_two_spirit_groups(women, mixed, "Rules")
compare_two_spirit_groups(women, mixed, "Fouls")
compare_two_spirit_groups(women, mixed, "Fairness")
compare_two_spirit_groups(women, mixed, "Attitude")
compare_two_spirit_groups(women, mixed, "Comms")
dev_teams <- raw %>%
filter((grepl(4,Opponent) | grepl(3,Opponent)) & !(grepl(1, Opponent) | grepl(2, Opponent)))
dev_teams$experience = "dev"
experienced_teams <- raw %>%
filter(grepl(1,Opponent))
experienced_teams$experience = "exp"
exp_dev <- rbind(dev_teams, experienced_teams) %>%
na.omit() %>%
group_by(experience) %>%
summarise(rules=mean(Rules),
sd_rules=sd(Rules),
n_Gr=n(),
SE_rules=sd(Rules)/sqrt(n()),
attitude=mean(Attitude),
sd_att=sd(Attitude),
SE_att=sd(Attitude)/sqrt(n()),
fouls=mean(Fouls),
sd_fouls=sd(Fouls),
SE_fouls=sd(Fouls)/sqrt(n()),
fairness=mean(Fairness),
sd_fair=sd(Fairness),
SE_fair=sd(Fairness)/sqrt(n()),
communication=mean(Comms),
sd_comm=sd(Comms),
SE_comm=sd(Comms)/sqrt(n()))
plotable_exp_dev <- exp_dev %>%
gather("spirit_category", "mean_scores", c(2,6,9,12,15))
exp_dev_p <- ggplot(plotable_exp_dev, aes(x=spirit_category, mean_scores, fill=experience)) +
geom_col(position=position_dodge())
exp_dev_p
drops <- c("n_Gr", "SE_rules", "sd_rules", "SE_att", "sd_att", "sd_fouls", "SE_fouls", "sd_fair", "SE_fair", "sd_comm", "SE_comm")
exp_dev_table <- exp_dev[ , !(names(exp_dev) %in% drops)]
overall_summary <- raw %>%
na.omit() %>%
group_by(League) %>%
summarise(rules=mean(Rules),
sd_rules=sd(Rules),
n_Gr=n(),
SE_rules=sd(Rules)/sqrt(n()),
attitude=mean(Attitude),
sd_att=sd(Attitude),
SE_att=sd(Attitude)/sqrt(n()),
fouls=mean(Fouls),
sd_fouls=sd(Fouls),
SE_fouls=sd(Fouls)/sqrt(n()),
fairness=mean(Fairness),
sd_fair=sd(Fairness),
SE_fair=sd(Fairness)/sqrt(n()),
communication=mean(Comms),
sd_comm=sd(Comms),
SE_comm=sd(Comms)/sqrt(n()))
mw_plotable <- overall_summary %>%
gather("spirit_category", "mean_scores", c(2,6,9,12,15))
mw_p <- ggplot(mw_plotable, aes(x=spirit_category, mean_scores, fill=League)) +
geom_col(position=position_dodge())
mw_p
lvl_summary <- raw %>%
na.omit() %>%
group_by(Level) %>%
summarise(rules=mean(Rules),
sd_rules=sd(Rules),
n_Gr=n(),
SE_rules=sd(Rules)/sqrt(n()),
attitude=mean(Attitude),
sd_att=sd(Attitude),
SE_att=sd(Attitude)/sqrt(n()),
fouls=mean(Fouls),
sd_fouls=sd(Fouls),
SE_fouls=sd(Fouls)/sqrt(n()),
fairness=mean(Fairness),
sd_fair=sd(Fairness),
SE_fair=sd(Fairness)/sqrt(n()),
communication=mean(Comms),
sd_comm=sd(Comms),
SE_comm=sd(Comms)/sqrt(n()))
lvl_plotable <- lvl_summary %>%
gather("spirit_category", "mean_scores", c(2,6,9,12,15))
lvl_p <- ggplot(lvl_plotable, aes(x=spirit_category, mean_scores, fill=Level)) +
geom_col(position=position_dodge())
lvl_p
lvl_summary <- raw %>%
na.omit() %>%
filter(grepl(1,Opponent) & !(grepl(3, Opponent) | grepl(4, Opponent))) %>%   # optional, remove dev teams from regionals
group_by(Level) %>%
summarise(rules=mean(Rules),
sd_rules=sd(Rules),
n_Gr=n(),
SE_rules=sd(Rules)/sqrt(n()),
attitude=mean(Attitude),
sd_att=sd(Attitude),
SE_att=sd(Attitude)/sqrt(n()),
fouls=mean(Fouls),
sd_fouls=sd(Fouls),
SE_fouls=sd(Fouls)/sqrt(n()),
fairness=mean(Fairness),
sd_fair=sd(Fairness),
SE_fair=sd(Fairness)/sqrt(n()),
communication=mean(Comms),
sd_comm=sd(Comms),
SE_comm=sd(Comms)/sqrt(n()))
lvl_plotable <- lvl_summary %>%
gather("spirit_category", "mean_scores", c(2,6,9,12,15))
lvl_p <- ggplot(lvl_plotable, aes(x=spirit_category, mean_scores, fill=Level)) +
geom_col(position=position_dodge())
lvl_p
View(lvl_summary)
View(lvl_plotable)
lvl_summary <- raw %>%
na.omit() %>%
filter(grepl(1,Opponent) & !(grepl(3, Opponent) | grepl(4, Opponent)))
View(lvl_summary)
lvl_summary <- raw %>%
na.omit() %>%
filter(grepl(1,Opponent) & !(grepl(3, Opponent) | grepl(4, Opponent)))
lvl_summary <- raw %>%
na.omit() %>%
filter(grepl(1,Opponent) & !(grepl(3, Opponent) | grepl(4, Opponent))) %>%   # optional, remove dev teams from regionals
group_by(Level) %>%
summarise(rules=mean(Rules),
sd_rules=sd(Rules),
n_Gr=n(),
SE_rules=sd(Rules)/sqrt(n()),
attitude=mean(Attitude),
sd_att=sd(Attitude),
SE_att=sd(Attitude)/sqrt(n()),
fouls=mean(Fouls),
sd_fouls=sd(Fouls),
SE_fouls=sd(Fouls)/sqrt(n()),
fairness=mean(Fairness),
sd_fair=sd(Fairness),
SE_fair=sd(Fairness)/sqrt(n()),
communication=mean(Comms),
sd_comm=sd(Comms),
SE_comm=sd(Comms)/sqrt(n()))
lvl_plotable <- lvl_summary %>%
gather("spirit_category", "mean_scores", c(2,6,9,12,15))
lvl_p <- ggplot(lvl_plotable, aes(x=spirit_category, mean_scores, fill=Level)) +
geom_col(position=position_dodge())
lvl_p
lvl_summary <- raw %>%
na.omit() %>%
filter(grepl(1,Opponent) & !(grepl(3, Opponent) | grepl(4, Opponent)))
lvl_summary <- raw %>%
na.omit() %>%
filter(grepl(1,Opponent) & !(grepl(3, Opponent) | grepl(4, Opponent))) %>%
filter(grepl("Regionals",Level))
lvl_summary <- raw %>%
na.omit() %>%
filter(grepl(1,Opponent) & !(grepl(3, Opponent) | grepl(4, Opponent))) %>%
filter(grepl("Regionals",Level)) %>%
filter(grepl(1,Team) & !(grepl(3, Team) | grepl(4, Team)))
lvl_summary <- raw %>%
na.omit() %>%
filter(grepl(1,Opponent) & !(grepl(3, Opponent) | grepl(4, Opponent))) %>%   # optional, remove dev teams from regionals
filter(grepl(1,Team) & !(grepl(3, Team) | grepl(4, Team))) %>% # optional, only search first teams rating first teams
group_by(Level) %>%
summarise(rules=mean(Rules),
sd_rules=sd(Rules),
n_Gr=n(),
SE_rules=sd(Rules)/sqrt(n()),
attitude=mean(Attitude),
sd_att=sd(Attitude),
SE_att=sd(Attitude)/sqrt(n()),
fouls=mean(Fouls),
sd_fouls=sd(Fouls),
SE_fouls=sd(Fouls)/sqrt(n()),
fairness=mean(Fairness),
sd_fair=sd(Fairness),
SE_fair=sd(Fairness)/sqrt(n()),
communication=mean(Comms),
sd_comm=sd(Comms),
SE_comm=sd(Comms)/sqrt(n()))
lvl_plotable <- lvl_summary %>%
gather("spirit_category", "mean_scores", c(2,6,9,12,15))
lvl_p <- ggplot(lvl_plotable, aes(x=spirit_category, mean_scores, fill=Level)) +
geom_col(position=position_dodge())
lvl_p
lvl_summary <- raw %>%
na.omit() %>%
filter(grepl(1,Opponent) & !(grepl(3, Opponent) | grepl(4, Opponent))) %>%   # optional, remove dev teams from regionals
filter(grepl(1,Team) & !(grepl(3, Team) | grepl(4, Team))) %>% # optional, only search first teams rating first teams
group_by(Level) %>%
summarise(rules=mean(Rules),
sd_rules=sd(Rules),
n_Gr=n(),
SE_rules=sd(Rules)/sqrt(n()),
attitude=mean(Attitude),
sd_att=sd(Attitude),
SE_att=sd(Attitude)/sqrt(n()),
fouls=mean(Fouls),
sd_fouls=sd(Fouls),
SE_fouls=sd(Fouls)/sqrt(n()),
fairness=mean(Fairness),
sd_fair=sd(Fairness),
SE_fair=sd(Fairness)/sqrt(n()),
communication=mean(Comms),
sd_comm=sd(Comms),
SE_comm=sd(Comms)/sqrt(n()))
lvl_plotable <- lvl_summary %>%
gather("spirit_category", "mean_scores", c(2,6,9,12,15))
lvl_p <- ggplot(lvl_plotable, aes(x=spirit_category, mean_scores, fill=Level)) +
geom_col(position=position_dodge())
lvl_p
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(pwr)
library(ordinal)
library(gridExtra)
library(RColorBrewer)
library(knitr)
library(scales)
library(googledrive)
library(xlsx)
install.packages('xlsx')
shiny::runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
runApp('freelance/plotly_drawing/plotly_drawing')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(plotly)
load('test.RData')
setwd("~/freelance/plotly_drawing/test")
load('test.RData')
us10y.p$cwc
us10y.p$cwc$f.d3.w
us10y.p$cwc$f.d3.w$us10y.f.d3.suw
head(us10y.p$cwc$f.d3.w$us10y.f.d3.suw)
runApp('~/freelance/plotly_drawing/plotly_drawing')
j=2400
k=2700
fig <- w.ws[j:k]%>%plot_ly(x=~Date,type='candlestick',open=~us10y.Open,high=~us10y.High,low=~us10y.Low,close=~us10y.Settle)
figs <- us10y.p$cwc$f.d5.w[j:k]%>%plot_ly(x=w.ws[j:k,Date],y=~us10y.f.d5.suw,type='scatter',mode='lines+markers')
fig
load('test.RData')
load('test.RData')
j=2400
k=2700
fig <- w.ws[j:k]%>%plot_ly(x=~Date,type='candlestick',open=~us10y.Open,high=~us10y.High,low=~us10y.Low,close=~us10y.Settle)
figs <- us10y.p$cwc$f.d5.w[j:k]%>%plot_ly(x=w.ws[j:k,Date],y=~us10y.f.d5.suw,type='scatter',mode='lines+markers')
figp <- us10y.p$cwc$f.d5.w[j:k]%>%plot_ly(x=w.ws[j:k,Date],y=~us10y.f.d5.prw,type='scatter',mode='lines+markers')
figs10 <- us10y.p$cwc$f.d10.w[j:k]%>%plot_ly(x=w.ws[j:k,Date],y=~us10y.f.d10.suw,type='scatter',mode='lines+markers')
figp10 <- us10y.p$cwc$f.d10.w[j:k]%>%plot_ly(x=w.ws[j:k,Date],y=~us10y.f.d10.prw,type='scatter',mode='lines+markers')
figf <- subplot(fig,figs,figp,figs10,figp10,nrows=5,shareX=TRUE)%>%layout(xaxis=list(rangeslider=list(visible=F)))
l <- list(
type='line',x0='2020-04-24',
x1 = '2020-05-18',
y0=0.579,
y1=0.739,
xref='x',yref='y',
line=list(color='green',width=0.5))
layout(figf,shapes=l)%>%
config(edits = list(shapePosition = TRUE))
fig
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(plotly)
load('test.RData')
j=2400
k=2700
fig <- w.ws[j:k]%>%plot_ly(x=~Date,type='candlestick',open=~us10y.Open,high=~us10y.High,low=~us10y.Low,close=~us10y.Settle)
figs <- us10y.p$cwc$f.d5.w[j:k]%>%plot_ly(x=w.ws[j:k,Date],y=~us10y.f.d5.suw,type='scatter',mode='lines+markers')
figp <- us10y.p$cwc$f.d5.w[j:k]%>%plot_ly(x=w.ws[j:k,Date],y=~us10y.f.d5.prw,type='scatter',mode='lines+markers')
figs10 <- us10y.p$cwc$f.d10.w[j:k]%>%plot_ly(x=w.ws[j:k,Date],y=~us10y.f.d10.suw,type='scatter',mode='lines+markers')
figp10 <- us10y.p$cwc$f.d10.w[j:k]%>%plot_ly(x=w.ws[j:k,Date],y=~us10y.f.d10.prw,type='scatter',mode='lines+markers')
figf <- subplot(fig,figs,figp,figs10,figp10,nrows=5,shareX=TRUE)%>%layout(xaxis=list(rangeslider=list(visible=F)))
l <- list(
type='line',x0='2020-04-24',
x1 = '2020-05-18',
y0=0.579,
y1=0.739,
xref='x',yref='y',
line=list(color='green',width=0.5))
layout(figf,shapes=l)%>%
config(edits = list(shapePosition = TRUE))
fig <- w.ws[j:k]%>%plot_ly(x=~Date,type='candlestick',open=~us10y.Open,high=~us10y.High,low=~us10y.Low,close=~us10y.Settle)
fig
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(plotly)
load('test.RData')
j=2400
k=2700
fig <- w.ws[j:k]%>%plot_ly(x=~Date,type='candlestick',open=~us10y.Open,high=~us10y.High,low=~us10y.Low,close=~us10y.Settle)
figs <- us10y.p$cwc$f.d5.w[j:k]%>%plot_ly(x=w.ws[j:k,Date],y=~us10y.f.d5.suw,type='scatter',mode='lines+markers')
figp <- us10y.p$cwc$f.d5.w[j:k]%>%plot_ly(x=w.ws[j:k,Date],y=~us10y.f.d5.prw,type='scatter',mode='lines+markers')
figs10 <- us10y.p$cwc$f.d10.w[j:k]%>%plot_ly(x=w.ws[j:k,Date],y=~us10y.f.d10.suw,type='scatter',mode='lines+markers')
figp10 <- us10y.p$cwc$f.d10.w[j:k]%>%plot_ly(x=w.ws[j:k,Date],y=~us10y.f.d10.prw,type='scatter',mode='lines+markers')
figf <- subplot(fig,figs,figp,figs10,figp10,nrows=5,shareX=TRUE)%>%layout(xaxis=list(rangeslider=list(visible=F)))
l <- list(
type='line',x0='2020-04-24',
x1 = '2020-05-18',
y0=0.579,
y1=0.739,
xref='x',yref='y',
line=list(color='green',width=0.5))
layout(figf,shapes=l)%>%
config(edits = list(shapePosition = TRUE))
j=2400
k=2700
fig <- w.ws[j:k]%>%plot_ly(x=~Date,type='candlestick',open=~us10y.Open,high=~us10y.High,low=~us10y.Low,close=~us10y.Settle)
fig
shiny::runApp('~/freelance/plotly_drawing/plotly_drawing')
runApp('~/freelance/plotly_drawing/plotly_drawing')
load('w.ws.RData')
wd
setwd("~/freelance/plotly_drawing/test")
load('w.ws.RData')
setwd("~/freelance/plotly_drawing/plotly_drawing")
load('w.ws.RData')
j=2400
k=2700
fig <- w.ws[j:k]%>%plot_ly(x=~Date,type='candlestick',open=~us10y.Open,high=~us10y.High,low=~us10y.Low,close=~us10y.Settle)
fig
nrow(w.ws)
w.ws[10664]
fig <- w.ws[j:k]%>%plot_ly(x=~Date,type='candlestick',open=~Open,high=~High,low=~Low,close=~Settle)
fig
figs <- us10y.p$cwc$f.d5.w[j:k]%>%plot_ly(x=w.ws[j:k,Date],y=~us10y.f.d5.suw,type='scatter',mode='lines+markers')
figs
len(us10y.p)
length(us10y.p)
length(us10y.p$cwc)
length(us10y.p$cwc$f.d5.w)
us10y.p$cwc$f.d5.w
typeof(us10y.p$cwc$f.d5.w)
length(us10y.p$cwc$f.d5.w$us10y.f.d5.suw)
length(us10y.p$cwc$f.d5.w$us10y.f.d5.crw)
length(us10y.p$cwc$f.d5.w$us10y.f.d5.prw)
length(us10y.p$cwc$f.d5.w$us10y.f.d5.qrw)
length(us10y.p$cwc$f.d10.w$us10y.f.d10.suw
)
365 * 5
365 * 10
w.ws[2600:2700,Date]
w.ws[14000:14365,Date]
w.ws[10000:10365,Date]
w.ws[10000,Date]
which(w.ws$Date == "2019-05-23 18:00:00 BST")
which(as.Date(w.ws$Date) == as.Date("2019-04-30", format="%yyyy-%mm-%dd"))
which(as.Date(w.ws$Date) == as.Date("2019-05-23 18:00:00 BST"))
as.Date(w.ws$Date)
which(as.Date(w.ws$Date) == as.Date("2019-05-23"))
runApp()
runApp()
runApp()
runApp()
j = 10054
k = 10359
w.ws[j:k,Date]
us10y.p$cwc$f.d5.w[j:k]
us10y.p$cwc$f.d5.w[100:102]
length(us10y.p$cwc$f.d5.w)
length(us10y.p$cwc$f.d5.w$us10y.f.d5.suw)
2705 / 365
runApp()
length(w.ws)
nrow(w.ws)
w.ws[-1]
as.Date("2020-05-17") - 10663
w.ws
runApp()
us10y.p
us10y.p$cwc$f.d5.w
us10y.f.d5.suw
length(us10y.p$cwc$f.d5.w)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
length(us10y.p$cwc$f.d5.w$us10y.f.d5.suw)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/freelance/plotly_drawing/test")
load('w.ws.RData')
fig <- w.ws[j:k]%>%plot_ly(x=~Date,type='candlestick',open=~Open,high=~High,low=~Low,close=~Settle)
j=2400
k=2700
fig <- w.ws[j:k]%>%plot_ly(x=~Date,type='candlestick',open=~Open,high=~High,low=~Low,close=~Settle)
fig
figs <- us10y.p$cwc$f.d5.w[j:k]%>%plot_ly(x=w.ws[j:k,Date],y=~us10y.f.d5.suw,type='scatter',mode='lines+markers')
figs
runApp('~/freelance/plotly_drawing/plotly_drawing')
runApp('~/freelance/plotly_drawing/plotly_drawing')
runApp('~/freelance/plotly_drawing/plotly_drawing')
runApp('~/freelance/plotly_drawing/plotly_drawing')
runApp('~/freelance/plotly_drawing/plotly_drawing')
runApp('~/freelance/plotly_drawing/plotly_drawing')
runApp('~/freelance/plotly_drawing/plotly_drawing')
runApp('~/freelance/plotly_drawing/plotly_drawing')
install.packages("birk")
runApp('~/freelance/plotly_drawing/plotly_drawing')
runApp('~/freelance/plotly_drawing/plotly_drawing')
runApp('~/freelance/plotly_drawing/plotly_drawing')
runApp('~/freelance/plotly_drawing/plotly_drawing')
runApp('~/freelance/plotly_drawing/plotly_drawing')
